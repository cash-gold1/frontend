{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from \"web3\";\nimport ERC20ABI from \"../constants/abi/ERC20.json\";\nexport var getContract = function getContract(provider, address) {\n  var web3 = new Web3(provider);\n  var contract = new web3.eth.Contract(ERC20ABI.abi, address);\n  return contract;\n};\nexport var getAllowance = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(contract, owner, spender) {\n    var allowance;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return contract.methods.allowance(owner, spender).call();\n\n          case 3:\n            allowance = _context.sent;\n            return _context.abrupt(\"return\", allowance);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", \"0\");\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function getAllowance(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getBalance = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(provider, tokenAddress, userAddress) {\n    var lpContract, balance;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            lpContract = getContract(provider, tokenAddress);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return lpContract.methods.balanceOf(userAddress).call();\n\n          case 4:\n            balance = _context2.sent;\n            return _context2.abrupt(\"return\", balance);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", \"0\");\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function getBalance(_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/theo/frontend/utils/erc20.ts"],"names":["Web3","ERC20ABI","getContract","provider","address","web3","contract","eth","Contract","abi","getAllowance","owner","spender","methods","allowance","call","getBalance","tokenAddress","userAddress","lpContract","balanceOf","balance"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAGA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAgBC,OAAhB,EAAoC;AAC7D,MAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASG,QAAT,CAAb;AACA,MAAMG,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CACdP,QAAQ,CAACQ,GADK,EAEfL,OAFe,CAAjB;AAIA,SAAOE,QAAP;AACD,CAPM;AASP,OAAO,IAAMI,YAAY;AAAA,sEAAG,iBAC1BJ,QAD0B,EAE1BK,KAF0B,EAG1BC,OAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMQN,QAAQ,CAACO,OAAT,CAC7BC,SAD6B,CACnBH,KADmB,EACZC,OADY,EAE7BG,IAF6B,EANR;;AAAA;AAMlBD,YAAAA,SANkB;AAAA,6CASjBA,SATiB;;AAAA;AAAA;AAAA;AAAA,6CAWjB,GAXiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZJ,YAAY;AAAA;AAAA;AAAA,GAAlB;AAeP,OAAO,IAAMM,UAAU;AAAA,uEAAG,kBACxBb,QADwB,EAExBc,YAFwB,EAGxBC,WAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKlBC,YAAAA,UALkB,GAKLjB,WAAW,CAACC,QAAD,EAAWc,YAAX,CALN;AAAA;AAAA;AAAA,mBAOQE,UAAU,CAACN,OAAX,CAC3BO,SAD2B,CACjBF,WADiB,EAE3BH,IAF2B,EAPR;;AAAA;AAOhBM,YAAAA,OAPgB;AAAA,8CAUfA,OAVe;;AAAA;AAAA;AAAA;AAAA,8CAYf,GAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVL,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import Web3 from \"web3\";\nimport { Contract } from \"web3-eth-contract\";\nimport { AbiItem } from \"web3-utils\";\nimport ERC20ABI from \"../constants/abi/ERC20.json\";\n\nexport const getContract = (provider: any, address: string) => {\n  const web3 = new Web3(provider);\n  const contract = new web3.eth.Contract(\n    (ERC20ABI.abi as unknown) as AbiItem,\n    address\n  );\n  return contract;\n};\n\nexport const getAllowance = async (\n  contract: Contract,\n  owner: string,\n  spender: string\n): Promise<string> => {\n  try {\n    const allowance: string = await contract.methods\n      .allowance(owner, spender)\n      .call();\n    return allowance;\n  } catch (e) {\n    return \"0\";\n  }\n};\n\nexport const getBalance = async (\n  provider: any,\n  tokenAddress: string,\n  userAddress: string\n): Promise<string> => {\n  const lpContract = getContract(provider, tokenAddress);\n  try {\n    const balance: string = await lpContract.methods\n      .balanceOf(userAddress)\n      .call();\n    return balance;\n  } catch (e) {\n    return \"0\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}