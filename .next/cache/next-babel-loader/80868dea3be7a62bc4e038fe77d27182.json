{"ast":null,"code":"var _jsxFileName = \"/Users/theo/genesis/contexts/Modals/Modals.tsx\";\nvar __jsx = React.createElement;\nimport React, { createContext, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nexport const Context = /*#__PURE__*/createContext({\n  onPresent: () => {},\n  onDismiss: () => {}\n});\n\nconst Modals = ({\n  children\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: content,\n    1: setContent\n  } = useState();\n  const {\n    0: modalKey,\n    1: setModalKey\n  } = useState();\n  const handlePresent = useCallback((modalContent, key) => {\n    setModalKey(key);\n    setContent(modalContent);\n    setIsOpen(true);\n  }, [setContent, setIsOpen, setModalKey]);\n  const handleDismiss = useCallback(() => {\n    setContent(undefined);\n    setIsOpen(false);\n  }, [setContent, setIsOpen, modalKey]);\n  return __jsx(Context.Provider, {\n    value: {\n      content,\n      isOpen,\n      onPresent: handlePresent,\n      onDismiss: handleDismiss\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, children, isOpen && __jsx(StyledModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(StyledModalBackdrop, {\n    onClick: handleDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.isValidElement(content) && /*#__PURE__*/React.cloneElement(content, {\n    onDismiss: handleDismiss\n  })));\n};\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: fixed;\n  top: 0; right: 0; bottom: 0; left: 0;\n`;\nconst StyledModalBackdrop = styled.div`\n  background-color: ${props => props.theme.color.grey[600]}aa;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`;\nexport default Modals;","map":{"version":3,"sources":["/Users/theo/genesis/contexts/Modals/Modals.tsx"],"names":["React","createContext","useCallback","useState","styled","Context","onPresent","onDismiss","Modals","children","isOpen","setIsOpen","content","setContent","modalKey","setModalKey","handlePresent","modalContent","key","handleDismiss","undefined","isValidElement","cloneElement","StyledModalWrapper","div","StyledModalBackdrop","props","theme","color","grey"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AASA,OAAO,MAAMC,OAAO,gBAAGJ,aAAa,CAAgB;AAClDK,EAAAA,SAAS,EAAE,MAAM,CAAE,CAD+B;AAElDC,EAAAA,SAAS,EAAE,MAAM,CAAE;AAF+B,CAAhB,CAA7B;;AAKP,MAAMC,MAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,EAAtC;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,EAAxC;AAEA,QAAMa,aAAa,GAAGd,WAAW,CAAC,CAACe,YAAD,EAAgCC,GAAhC,KAAiD;AACjFH,IAAAA,WAAW,CAACG,GAAD,CAAX;AACAL,IAAAA,UAAU,CAACI,YAAD,CAAV;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJgC,EAI9B,CAACE,UAAD,EAAaF,SAAb,EAAwBI,WAAxB,CAJ8B,CAAjC;AAMA,QAAMI,aAAa,GAAGjB,WAAW,CAAC,MAAM;AACtCW,IAAAA,UAAU,CAACO,SAAD,CAAV;AACAT,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHgC,EAG9B,CAACE,UAAD,EAAaF,SAAb,EAAwBG,QAAxB,CAH8B,CAAjC;AAKA,SACE,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACvBF,MAAAA,OADuB;AAEvBF,MAAAA,MAFuB;AAGvBJ,MAAAA,SAAS,EAAEU,aAHY;AAIvBT,MAAAA,SAAS,EAAEY;AAJY,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGV,QANH,EAOGC,MAAM,IACL,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,OAAO,EAAES,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,aAAAnB,KAAK,CAACqB,cAAN,CAAqBT,OAArB,kBAAiCZ,KAAK,CAACsB,YAAN,CAAmBV,OAAnB,EAA4B;AAC5DL,IAAAA,SAAS,EAAEY;AADiD,GAA5B,CAFpC,CARJ,CADF;AAkBD,CAlCD;;AAoCA,MAAMI,kBAAkB,GAAGnB,MAAM,CAACoB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,mBAAmB,GAAGrB,MAAM,CAACoB,GAAI;AACvC,sBAAsBE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;AAC3D;AACA;AACA,CAJA;AAMA,eAAerB,MAAf","sourcesContent":["import React, { createContext, useCallback, useState } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalsContext {\n  content?: React.ReactNode,\n  isOpen?: boolean,\n  onPresent: (content: React.ReactNode, key?: string) => void,\n  onDismiss: () => void\n}\n\nexport const Context = createContext<ModalsContext>({\n  onPresent: () => {},\n  onDismiss: () => {},\n})\n\nconst Modals: React.FC = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [content, setContent] = useState<React.ReactNode>()\n  const [modalKey, setModalKey] = useState<string>()\n\n  const handlePresent = useCallback((modalContent: React.ReactNode, key?: string) => {\n    setModalKey(key)\n    setContent(modalContent)\n    setIsOpen(true)\n  }, [setContent, setIsOpen, setModalKey])\n\n  const handleDismiss = useCallback(() => {\n    setContent(undefined)\n    setIsOpen(false)\n  }, [setContent, setIsOpen, modalKey])\n\n  return (\n    <Context.Provider value={{\n      content,\n      isOpen,\n      onPresent: handlePresent,\n      onDismiss: handleDismiss,\n    }}>\n      {children}\n      {isOpen && (\n        <StyledModalWrapper>\n          <StyledModalBackdrop onClick={handleDismiss} />\n          {React.isValidElement(content) && React.cloneElement(content, {\n            onDismiss: handleDismiss,\n          })}\n        </StyledModalWrapper>\n      )}\n    </Context.Provider>\n  )\n}\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: fixed;\n  top: 0; right: 0; bottom: 0; left: 0;\n`\n\nconst StyledModalBackdrop = styled.div`\n  background-color: ${props => props.theme.color.grey[600]}aa;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`\n\nexport default Modals"]},"metadata":{},"sourceType":"module"}