{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport useSushi from \"./useSushi\";\nimport { useWallet } from \"use-wallet\";\nimport { getAllowance } from \"../utils/erc20\";\nimport { getMasterChefContract } from \"../sushi/utils\";\n\nconst useAllowance = lpContract => {\n  const {\n    0: allowance,\n    1: setAllowance\n  } = useState(new BigNumber(0));\n  const {\n    account\n  } = useWallet();\n  const sushi = useSushi();\n  const masterChefContract = getMasterChefContract(sushi);\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await getAllowance(lpContract, account, masterChefContract.options.address);\n    setAllowance(new BigNumber(allowance));\n  }, [account, masterChefContract, lpContract]);\n  useEffect(() => {\n    if (account && masterChefContract && lpContract) {\n      fetchAllowance();\n    }\n\n    let refreshInterval = setInterval(fetchAllowance, 10000);\n    return () => clearInterval(refreshInterval);\n  }, [account, masterChefContract, lpContract]);\n  return allowance;\n};\n\nexport default useAllowance;","map":{"version":3,"sources":["/Users/theo/frontend/hooks/useAllowance.ts"],"names":["useCallback","useEffect","useState","BigNumber","useSushi","useWallet","getAllowance","getMasterChefContract","useAllowance","lpContract","allowance","setAllowance","account","sushi","masterChefContract","fetchAllowance","options","address","refreshInterval","setInterval","clearInterval"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAGA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,qBAAT,QAAsC,gBAAtC;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAA0B;AAC7C,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAkDP,SAAS,EAAjE;AACA,QAAMQ,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMU,kBAAkB,GAAGP,qBAAqB,CAACM,KAAD,CAAhD;AAEA,QAAME,cAAc,GAAGf,WAAW,CAAC,YAAY;AAC7C,UAAMU,SAAS,GAAG,MAAMJ,YAAY,CAClCG,UADkC,EAElCG,OAFkC,EAGlCE,kBAAkB,CAACE,OAAnB,CAA2BC,OAHO,CAApC;AAKAN,IAAAA,YAAY,CAAC,IAAIR,SAAJ,CAAcO,SAAd,CAAD,CAAZ;AACD,GAPiC,EAO/B,CAACE,OAAD,EAAUE,kBAAV,EAA8BL,UAA9B,CAP+B,CAAlC;AASAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,OAAO,IAAIE,kBAAX,IAAiCL,UAArC,EAAiD;AAC/CM,MAAAA,cAAc;AACf;;AACD,QAAIG,eAAe,GAAGC,WAAW,CAACJ,cAAD,EAAiB,KAAjB,CAAjC;AACA,WAAO,MAAMK,aAAa,CAACF,eAAD,CAA1B;AACD,GANQ,EAMN,CAACN,OAAD,EAAUE,kBAAV,EAA8BL,UAA9B,CANM,CAAT;AAQA,SAAOC,SAAP;AACD,CAxBD;;AA0BA,eAAeF,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport BigNumber from \"bignumber.js\";\nimport useSushi from \"./useSushi\";\nimport { useWallet } from \"use-wallet\";\nimport { Contract } from \"web3-eth-contract\";\n\nimport { getAllowance } from \"../utils/erc20\";\nimport { getMasterChefContract } from \"../sushi/utils\";\n\nconst useAllowance = (lpContract: Contract) => {\n  const [allowance, setAllowance] = useState(new BigNumber(0));\n  const { account }: { account: string; ethereum: any } = useWallet();\n  const sushi = useSushi();\n  const masterChefContract = getMasterChefContract(sushi);\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await getAllowance(\n      lpContract,\n      account,\n      masterChefContract.options.address\n    );\n    setAllowance(new BigNumber(allowance));\n  }, [account, masterChefContract, lpContract]);\n\n  useEffect(() => {\n    if (account && masterChefContract && lpContract) {\n      fetchAllowance();\n    }\n    let refreshInterval = setInterval(fetchAllowance, 10000);\n    return () => clearInterval(refreshInterval);\n  }, [account, masterChefContract, lpContract]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n"]},"metadata":{},"sourceType":"module"}