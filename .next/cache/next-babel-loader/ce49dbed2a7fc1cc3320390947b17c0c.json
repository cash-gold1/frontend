{"ast":null,"code":"import Web3 from \"web3\";\nimport ERC20ABI from \"../constants/abi/ERC20.json\";\nexport const getContract = (provider, address) => {\n  const web3 = new Web3(provider);\n  const contract = new web3.eth.Contract(ERC20ABI.abi, address);\n  return contract;\n};\nexport const getAllowance = async (contract, owner, spender) => {\n  try {\n    const allowance = await contract.methods.allowance(owner, spender).call();\n    return allowance;\n  } catch (e) {\n    return \"0\";\n  }\n};\nexport const getBalance = async (provider, tokenAddress, userAddress) => {\n  const lpContract = getContract(provider, tokenAddress);\n\n  try {\n    const balance = await lpContract.methods.balanceOf(userAddress).call();\n    return balance;\n  } catch (e) {\n    return \"0\";\n  }\n};","map":{"version":3,"sources":["/Users/theo/frontend/utils/erc20.ts"],"names":["Web3","ERC20ABI","getContract","provider","address","web3","contract","eth","Contract","abi","getAllowance","owner","spender","allowance","methods","call","e","getBalance","tokenAddress","userAddress","lpContract","balance","balanceOf"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAGA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAgBC,OAAhB,KAAoC;AAC7D,QAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASG,QAAT,CAAb;AACA,QAAMG,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CACdP,QAAQ,CAACQ,GADK,EAEfL,OAFe,CAAjB;AAIA,SAAOE,QAAP;AACD,CAPM;AASP,OAAO,MAAMI,YAAY,GAAG,OAC1BJ,QAD0B,EAE1BK,KAF0B,EAG1BC,OAH0B,KAIN;AACpB,MAAI;AACF,UAAMC,SAAiB,GAAG,MAAMP,QAAQ,CAACQ,OAAT,CAC7BD,SAD6B,CACnBF,KADmB,EACZC,OADY,EAE7BG,IAF6B,EAAhC;AAGA,WAAOF,SAAP;AACD,GALD,CAKE,OAAOG,CAAP,EAAU;AACV,WAAO,GAAP;AACD;AACF,CAbM;AAeP,OAAO,MAAMC,UAAU,GAAG,OACxBd,QADwB,EAExBe,YAFwB,EAGxBC,WAHwB,KAIJ;AACpB,QAAMC,UAAU,GAAGlB,WAAW,CAACC,QAAD,EAAWe,YAAX,CAA9B;;AACA,MAAI;AACF,UAAMG,OAAe,GAAG,MAAMD,UAAU,CAACN,OAAX,CAC3BQ,SAD2B,CACjBH,WADiB,EAE3BJ,IAF2B,EAA9B;AAGA,WAAOM,OAAP;AACD,GALD,CAKE,OAAOL,CAAP,EAAU;AACV,WAAO,GAAP;AACD;AACF,CAdM","sourcesContent":["import Web3 from \"web3\";\nimport { Contract } from \"web3-eth-contract\";\nimport { AbiItem } from \"web3-utils\";\nimport ERC20ABI from \"../constants/abi/ERC20.json\";\n\nexport const getContract = (provider: any, address: string) => {\n  const web3 = new Web3(provider);\n  const contract = new web3.eth.Contract(\n    (ERC20ABI.abi as unknown) as AbiItem,\n    address\n  );\n  return contract;\n};\n\nexport const getAllowance = async (\n  contract: Contract,\n  owner: string,\n  spender: string\n): Promise<string> => {\n  try {\n    const allowance: string = await contract.methods\n      .allowance(owner, spender)\n      .call();\n    return allowance;\n  } catch (e) {\n    return \"0\";\n  }\n};\n\nexport const getBalance = async (\n  provider: any,\n  tokenAddress: string,\n  userAddress: string\n): Promise<string> => {\n  const lpContract = getContract(provider, tokenAddress);\n  try {\n    const balance: string = await lpContract.methods\n      .balanceOf(userAddress)\n      .call();\n    return balance;\n  } catch (e) {\n    return \"0\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}