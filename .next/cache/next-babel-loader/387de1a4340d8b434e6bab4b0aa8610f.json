{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { useWallet } from \"use-wallet\";\n\nvar useBlock = function useBlock() {\n  _s();\n\n  var _useState = useState(0),\n      block = _useState[0],\n      setBlock = _useState[1];\n\n  var _useWallet = useWallet(),\n      ethereum = _useWallet.ethereum;\n\n  useEffect(function () {\n    if (!ethereum) return;\n    var web3 = new Web3(ethereum);\n    var interval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var latestBlockNumber;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.getBlockNumber();\n\n            case 2:\n              latestBlockNumber = _context.sent;\n\n              if (block !== latestBlockNumber) {\n                setBlock(latestBlockNumber);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [ethereum]);\n  return block;\n};\n\n_s(useBlock, \"v7EeFuSL2zsJccGuDHkDjYX84bo=\", false, function () {\n  return [useWallet];\n});\n\nexport default useBlock;","map":{"version":3,"sources":["/Users/theo/frontend/hooks/useBlock.ts"],"names":["useEffect","useState","Web3","useWallet","useBlock","block","setBlock","ethereum","web3","interval","setInterval","eth","getBlockNumber","latestBlockNumber","clearInterval"],"mappings":";;;;;AAAA,SAAsBA,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACKH,QAAQ,CAAC,CAAD,CADb;AAAA,MACdI,KADc;AAAA,MACPC,QADO;;AAAA,mBAEmBH,SAAS,EAF5B;AAAA,MAEbI,QAFa,cAEbA,QAFa;;AAIrBP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACO,QAAL,EAAe;AACf,QAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASK,QAAT,CAAb;AAEA,QAAME,QAAQ,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKF,IAAI,CAACG,GAAL,CAASC,cAAT,EADL;;AAAA;AACrBC,cAAAA,iBADqB;;AAE3B,kBAAIR,KAAK,KAAKQ,iBAAd,EAAiC;AAC/BP,gBAAAA,QAAQ,CAACO,iBAAD,CAAR;AACD;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAKzB,IALyB,CAA5B;AAOA,WAAO;AAAA,aAAMC,aAAa,CAACL,QAAD,CAAnB;AAAA,KAAP;AACD,GAZQ,EAYN,CAACF,QAAD,CAZM,CAAT;AAcA,SAAOF,KAAP;AACD,CAnBD;;GAAMD,Q;UAEoCD,S;;;AAmB1C,eAAeC,QAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport { useWallet } from \"use-wallet\";\n\ndeclare const window: any;\n\nconst useBlock = () => {\n  const [block, setBlock] = useState(0);\n  const { ethereum }: { ethereum: any } = useWallet();\n\n  useEffect(() => {\n    if (!ethereum) return;\n    const web3 = new Web3(ethereum);\n\n    const interval = setInterval(async () => {\n      const latestBlockNumber = await web3.eth.getBlockNumber();\n      if (block !== latestBlockNumber) {\n        setBlock(latestBlockNumber);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [ethereum]);\n\n  return block;\n};\n\nexport default useBlock;\n"]},"metadata":{},"sourceType":"module"}