{"ast":null,"code":"var _jsxFileName = \"/Users/theo/frontend/components/customChart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport dynamic from \"next/dynamic\";\nconst Chart = dynamic(() => import(\"react-apexcharts\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"react-apexcharts\")],\n    modules: [\"react-apexcharts\"]\n  }\n});\nimport moment from \"moment\";\nimport numbro from \"numbro\";\nimport ColorGuide from \"../styles/colorGuide\";\nexport default function CustomChart({\n  aggregateData: {\n    pairDayDatas\n  }\n}) {\n  const series = [{\n    name: \"Liquidity\",\n    data: Object.values(pairDayDatas).map(pair => Number(pair.reserveUSD).toFixed(0))\n  }];\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      height: 300,\n      width: 250,\n      type: \"area\"\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 2\n    },\n    xaxis: {\n      type: \"datetime\",\n      categories: Object.values(pairDayDatas).map(pair => new Date(pair.date * 1000).getTime())\n    },\n    tooltip: {\n      x: {\n        format: \"dd/MM/yy HH:mm\"\n      }\n    }\n  };\n  return __jsx(Chart, {\n    options: options,\n    series: series,\n    type: \"area\",\n    width: \"100%\",\n    height: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/theo/frontend/components/customChart.js"],"names":["dynamic","Chart","ssr","moment","numbro","ColorGuide","CustomChart","aggregateData","pairDayDatas","series","name","data","Object","values","map","pair","Number","reserveUSD","toFixed","options","chart","toolbar","show","height","width","type","dataLabels","enabled","stroke","curve","xaxis","categories","Date","date","getTime","tooltip","x","format"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,MAAM,OAAO,kBAAP,CAAP,EAAmC;AAAEE,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCAArB,kBAAqB;AAAA,cAArB,kBAAqB;AAAA;AAAA,CAAnC,CAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,aAAa,EAAE;AAAEC,IAAAA;AAAF;AAAjB,CAArB,EAA0D;AACvE,QAAMC,MAAM,GAAG,CACb;AACEC,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAcL,YAAd,EAA4BM,GAA5B,CAAiCC,IAAD,IACpCC,MAAM,CAACD,IAAI,CAACE,UAAN,CAAN,CAAwBC,OAAxB,CAAgC,CAAhC,CADI;AAFR,GADa,CAAf;AASA,QAAMC,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADJ;AAELC,MAAAA,MAAM,EAAE,GAFH;AAGLC,MAAAA,KAAK,EAAE,GAHF;AAILC,MAAAA,IAAI,EAAE;AAJD,KADO;AAOdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC,KAPE;AAUdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,QADD;AAENL,MAAAA,KAAK,EAAE;AAFD,KAVM;AAcdM,IAAAA,KAAK,EAAE;AACLL,MAAAA,IAAI,EAAE,UADD;AAELM,MAAAA,UAAU,EAAEnB,MAAM,CAACC,MAAP,CAAcL,YAAd,EAA4BM,GAA5B,CAAiCC,IAAD,IAC1C,IAAIiB,IAAJ,CAASjB,IAAI,CAACkB,IAAL,GAAY,IAArB,EAA2BC,OAA3B,EADU;AAFP,KAdO;AAoBdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,CAAC,EAAE;AACDC,QAAAA,MAAM,EAAE;AADP;AADI;AApBK,GAAhB;AA2BA,SACE,MAAC,KAAD;AACE,IAAA,OAAO,EAAElB,OADX;AAEE,IAAA,MAAM,EAAEV,MAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAE,MAJT;AAKE,IAAA,MAAM,EAAE,GALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD","sourcesContent":["import dynamic from \"next/dynamic\";\nconst Chart = dynamic(() => import(\"react-apexcharts\"), { ssr: false });\nimport moment from \"moment\";\nimport numbro from \"numbro\";\n\nimport ColorGuide from \"../styles/colorGuide\";\n\nexport default function CustomChart({ aggregateData: { pairDayDatas } }) {\n  const series = [\n    {\n      name: \"Liquidity\",\n      data: Object.values(pairDayDatas).map((pair) =>\n        Number(pair.reserveUSD).toFixed(0)\n      ),\n    },\n  ];\n\n  const options = {\n    chart: {\n      toolbar: { show: false },\n      height: 300,\n      width: 250,\n      type: \"area\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 2,\n    },\n    xaxis: {\n      type: \"datetime\",\n      categories: Object.values(pairDayDatas).map((pair) =>\n        new Date(pair.date * 1000).getTime()\n      ),\n    },\n    tooltip: {\n      x: {\n        format: \"dd/MM/yy HH:mm\",\n      },\n    },\n  };\n\n  return (\n    <Chart\n      options={options}\n      series={series}\n      type=\"area\"\n      width={\"100%\"}\n      height={320}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}