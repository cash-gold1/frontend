{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { useWallet } from \"use-wallet\";\nimport { getBalance } from \"../utils/erc20\";\nimport useBlock from \"./useBlock\";\n\nconst useTokenBalance = tokenAddress => {\n  const {\n    0: balance,\n    1: setBalance\n  } = useState(new BigNumber(0));\n  const {\n    account,\n    ethereum\n  } = useWallet();\n  const block = useBlock();\n  const fetchBalance = useCallback(async () => {\n    const balance = await getBalance(ethereum, tokenAddress, account);\n    setBalance(new BigNumber(balance));\n  }, [account, ethereum, tokenAddress]);\n  useEffect(() => {\n    if (account && ethereum) {\n      fetchBalance();\n    }\n  }, [account, ethereum, setBalance, block, tokenAddress]);\n  return balance;\n};\n\nexport default useTokenBalance;","map":{"version":3,"sources":["/Users/theo/frontend/hooks/useTokenBalance.ts"],"names":["useCallback","useEffect","useState","BigNumber","useWallet","getBalance","useBlock","useTokenBalance","tokenAddress","balance","setBalance","account","ethereum","block","fetchBalance"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,eAAe,GAAIC,YAAD,IAA0B;AAChD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA4DR,SAAS,EAA3E;AACA,QAAMS,KAAK,GAAGP,QAAQ,EAAtB;AAEA,QAAMQ,YAAY,GAAGd,WAAW,CAAC,YAAY;AAC3C,UAAMS,OAAO,GAAG,MAAMJ,UAAU,CAACO,QAAD,EAAWJ,YAAX,EAAyBG,OAAzB,CAAhC;AACAD,IAAAA,UAAU,CAAC,IAAIP,SAAJ,CAAcM,OAAd,CAAD,CAAV;AACD,GAH+B,EAG7B,CAACE,OAAD,EAAUC,QAAV,EAAoBJ,YAApB,CAH6B,CAAhC;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,IAAIC,QAAf,EAAyB;AACvBE,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACH,OAAD,EAAUC,QAAV,EAAoBF,UAApB,EAAgCG,KAAhC,EAAuCL,YAAvC,CAJM,CAAT;AAMA,SAAOC,OAAP;AACD,CAjBD;;AAmBA,eAAeF,eAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport BigNumber from \"bignumber.js\";\nimport { useWallet } from \"use-wallet\";\n\nimport { getBalance } from \"../utils/erc20\";\nimport useBlock from \"./useBlock\";\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const { account, ethereum }: { account: string; ethereum: any } = useWallet();\n  const block = useBlock();\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await getBalance(ethereum, tokenAddress, account);\n    setBalance(new BigNumber(balance));\n  }, [account, ethereum, tokenAddress]);\n\n  useEffect(() => {\n    if (account && ethereum) {\n      fetchBalance();\n    }\n  }, [account, ethereum, setBalance, block, tokenAddress]);\n\n  return balance;\n};\n\nexport default useTokenBalance;\n"]},"metadata":{},"sourceType":"module"}