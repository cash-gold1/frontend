{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport { useWallet } from \"use-wallet\";\nimport { getMasterChefContract, getWethContract, getFarms, getTotalLPWethValue } from \"../sushi/utils\";\nimport useSushi from \"./useSushi\";\nimport useBlock from \"./useBlock\";\n\nconst useAllStakedValue = () => {\n  const {\n    0: balances,\n    1: setBalance\n  } = useState([]);\n  const {\n    account\n  } = useWallet();\n  const sushi = useSushi();\n  const farms = getFarms(sushi);\n  const masterChefContract = getMasterChefContract(sushi);\n  const wethContact = getWethContract(sushi);\n  const block = useBlock();\n  const fetchAllStakedValue = useCallback(async () => {\n    const balances = await Promise.all(farms.map(({\n      pid,\n      lpContract,\n      tokenContract\n    }) => getTotalLPWethValue(masterChefContract, wethContact, lpContract, tokenContract, pid)));\n    setBalance(balances);\n  }, [account, masterChefContract, sushi]);\n  useEffect(() => {\n    if (account && masterChefContract && sushi) {\n      fetchAllStakedValue();\n    }\n  }, [account, block, masterChefContract, setBalance, sushi]);\n  return balances;\n};\n\nexport default useAllStakedValue;","map":{"version":3,"sources":["/Users/theo/frontend/hooks/useAllStakedValue.ts"],"names":["useCallback","useEffect","useState","useWallet","getMasterChefContract","getWethContract","getFarms","getTotalLPWethValue","useSushi","useBlock","useAllStakedValue","balances","setBalance","account","sushi","farms","masterChefContract","wethContact","block","fetchAllStakedValue","Promise","all","map","pid","lpContract","tokenContract"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,SAASC,SAAT,QAA0B,YAA1B;AAGA,SACEC,qBADF,EAEEC,eAFF,EAGEC,QAHF,EAIEC,mBAJF,QAKO,gBALP;AAMA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAUA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkDV,SAAS,EAAjE;AACA,QAAMW,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,KAAK,GAAGT,QAAQ,CAACQ,KAAD,CAAtB;AACA,QAAME,kBAAkB,GAAGZ,qBAAqB,CAACU,KAAD,CAAhD;AACA,QAAMG,WAAW,GAAGZ,eAAe,CAACS,KAAD,CAAnC;AACA,QAAMI,KAAK,GAAGT,QAAQ,EAAtB;AAEA,QAAMU,mBAAmB,GAAGnB,WAAW,CAAC,YAAY;AAClD,UAAMW,QAA4B,GAAG,MAAMS,OAAO,CAACC,GAAR,CACzCN,KAAK,CAACO,GAAN,CACE,CAAC;AACCC,MAAAA,GADD;AAECC,MAAAA,UAFD;AAGCC,MAAAA;AAHD,KAAD,KASElB,mBAAmB,CACjBS,kBADiB,EAEjBC,WAFiB,EAGjBO,UAHiB,EAIjBC,aAJiB,EAKjBF,GALiB,CAVvB,CADyC,CAA3C;AAqBAX,IAAAA,UAAU,CAACD,QAAD,CAAV;AACD,GAvBsC,EAuBpC,CAACE,OAAD,EAAUG,kBAAV,EAA8BF,KAA9B,CAvBoC,CAAvC;AAyBAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,IAAIG,kBAAX,IAAiCF,KAArC,EAA4C;AAC1CK,MAAAA,mBAAmB;AACpB;AACF,GAJQ,EAIN,CAACN,OAAD,EAAUK,KAAV,EAAiBF,kBAAjB,EAAqCJ,UAArC,EAAiDE,KAAjD,CAJM,CAAT;AAMA,SAAOH,QAAP;AACD,CAzCD;;AA2CA,eAAeD,iBAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport BigNumber from \"bignumber.js\";\nimport { useWallet } from \"use-wallet\";\nimport { Contract } from \"web3-eth-contract\";\n\nimport {\n  getMasterChefContract,\n  getWethContract,\n  getFarms,\n  getTotalLPWethValue,\n} from \"../sushi/utils\";\nimport useSushi from \"./useSushi\";\nimport useBlock from \"./useBlock\";\n\nexport interface StakedValue {\n  tokenAmount: BigNumber;\n  wethAmount: BigNumber;\n  totalWethValue: BigNumber;\n  tokenPriceInWeth: BigNumber;\n  poolWeight: BigNumber;\n}\n\nconst useAllStakedValue = () => {\n  const [balances, setBalance] = useState([] as Array<StakedValue>);\n  const { account }: { account: string; ethereum: any } = useWallet();\n  const sushi = useSushi();\n  const farms = getFarms(sushi);\n  const masterChefContract = getMasterChefContract(sushi);\n  const wethContact = getWethContract(sushi);\n  const block = useBlock();\n\n  const fetchAllStakedValue = useCallback(async () => {\n    const balances: Array<StakedValue> = await Promise.all(\n      farms.map(\n        ({\n          pid,\n          lpContract,\n          tokenContract,\n        }: {\n          pid: number;\n          lpContract: Contract;\n          tokenContract: Contract;\n        }) =>\n          getTotalLPWethValue(\n            masterChefContract,\n            wethContact,\n            lpContract,\n            tokenContract,\n            pid\n          )\n      )\n    );\n\n    setBalance(balances);\n  }, [account, masterChefContract, sushi]);\n\n  useEffect(() => {\n    if (account && masterChefContract && sushi) {\n      fetchAllStakedValue();\n    }\n  }, [account, block, masterChefContract, setBalance, sushi]);\n\n  return balances;\n};\n\nexport default useAllStakedValue;\n"]},"metadata":{},"sourceType":"module"}