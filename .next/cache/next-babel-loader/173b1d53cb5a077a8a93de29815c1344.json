{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/theo/genesis/contexts/Transactions/TransactionsProvider.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useReducer } from 'react';\nimport Context from './context';\nimport reducer, { initialState, setTransactions, addTransaction } from './reducer';\n\nvar TransactionsProvider = function TransactionsProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer$ = _useReducer[0],\n      initialized = _useReducer$.initialized,\n      transactions = _useReducer$.transactions,\n      dispatch = _useReducer[1];\n\n  var handleAddTransaction = useCallback(function (tx) {\n    dispatch(addTransaction(tx));\n  }, [dispatch]);\n  var fetchTransactions = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var txsRaw, txs;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              txsRaw = localStorage.getItem('transactions');\n              txs = JSON.parse(txsRaw) || {};\n              dispatch(setTransactions(txs));\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [dispatch]);\n  useEffect(function () {\n    if (initialized) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }, [initialized, transactions]);\n  useEffect(function () {\n    fetchTransactions();\n  }, [fetchTransactions]);\n  return __jsx(Context.Provider, {\n    value: {\n      transactions: transactions,\n      onAddTransaction: handleAddTransaction\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(TransactionsProvider, \"cAJ7kXvwzXP1Pbne3SJCgjbf/PA=\");\n\n_c = TransactionsProvider;\nexport default TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/Users/theo/genesis/contexts/Transactions/TransactionsProvider.tsx"],"names":["React","useCallback","useEffect","useReducer","Context","reducer","initialState","setTransactions","addTransaction","TransactionsProvider","children","initialized","transactions","dispatch","handleAddTransaction","tx","fetchTransactions","txsRaw","localStorage","getItem","txs","JSON","parse","e","console","log","setItem","stringify","onAddTransaction"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,UAAxC,QAA0D,OAA1D;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,IACEC,YADF,EAEEC,eAFF,EAGEC,cAHF,QAIO,WAJP;;AAOA,IAAMC,oBAA8B,GAAG,SAAjCA,oBAAiC,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACLP,UAAU,CAACE,OAAD,EAAUC,YAAV,CADL;AAAA;AAAA,MAC9CK,WAD8C,gBAC9CA,WAD8C;AAAA,MACjCC,YADiC,gBACjCA,YADiC;AAAA,MACjBC,QADiB;;AAGvD,MAAMC,oBAAoB,GAAGb,WAAW,CAAC,UAACc,EAAD,EAAqB;AAC5DF,IAAAA,QAAQ,CAACL,cAAc,CAACO,EAAD,CAAf,CAAR;AACD,GAFuC,EAErC,CAACF,QAAD,CAFqC,CAAxC;AAIA,MAAMG,iBAAiB,GAAGf,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACpC,gBAAI;AACIgB,cAAAA,MADJ,GACaC,YAAY,CAACC,OAAb,CAAqB,cAArB,CADb;AAEIC,cAAAA,GAFJ,GAEUC,IAAI,CAACC,KAAL,CAAWL,MAAX,KAAyC,EAFnD;AAGFJ,cAAAA,QAAQ,CAACN,eAAe,CAACa,GAAD,CAAhB,CAAR;AACD,aAJD,CAIE,OAAOG,CAAP,EAAU;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AAPmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAQlC,CAACV,QAAD,CARkC,CAArC;AAUAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,WAAJ,EAAiB;AACfO,MAAAA,YAAY,CAACQ,OAAb,CAAqB,cAArB,EAAqCL,IAAI,CAACM,SAAL,CAAef,YAAf,CAArC;AACD;AACF,GAJQ,EAIN,CAACD,WAAD,EAAcC,YAAd,CAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,SACE,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACvBJ,MAAAA,YAAY,EAAZA,YADuB;AAEvBgB,MAAAA,gBAAgB,EAAEd;AAFK,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,QAJH,CADF;AAQD,CAnCD;;GAAMD,oB;;KAAAA,oB;AAqCN,eAAeA,oBAAf","sourcesContent":["import React, { useCallback, useEffect, useReducer } from 'react'\n\nimport Context from './context'\nimport reducer, {\n  initialState,\n  setTransactions,\n  addTransaction,\n} from './reducer'\nimport { Transaction, TransactionsMap } from './types'\n\nconst TransactionsProvider: React.FC = ({ children }) => {\n  const [{ initialized, transactions }, dispatch] = useReducer(reducer, initialState)\n\n  const handleAddTransaction = useCallback((tx: Transaction) => {\n    dispatch(addTransaction(tx))\n  }, [dispatch])\n\n  const fetchTransactions = useCallback(async () => {\n    try {\n      const txsRaw = localStorage.getItem('transactions')\n      const txs = JSON.parse(txsRaw) as TransactionsMap || {}\n      dispatch(setTransactions(txs))\n    } catch (e) {\n      console.log(e)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    if (initialized) {\n      localStorage.setItem('transactions', JSON.stringify(transactions))\n    }\n  }, [initialized, transactions])\n\n  useEffect(() => {\n    fetchTransactions()\n  }, [fetchTransactions])\n\n  return (\n    <Context.Provider value={{\n      transactions,\n      onAddTransaction: handleAddTransaction,\n    }}>\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport default TransactionsProvider"]},"metadata":{},"sourceType":"module"}