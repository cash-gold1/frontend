{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/theo/frontend/contexts/SushiProvider/SushiProvider.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useWallet } from \"use-wallet\";\nimport { Sushi } from \"../../sushi\";\nexport var Context = /*#__PURE__*/createContext({\n  sushi: undefined\n});\n\nvar SushiProvider = function SushiProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useWallet = useWallet(),\n      ethereum = _useWallet.ethereum;\n\n  var _useState = useState(),\n      sushi = _useState[0],\n      setSushi = _useState[1]; // @ts-ignore\n  // @ts-ignore\n\n\n  useEffect(function () {\n    if (ethereum) {\n      var chainId = Number(ethereum.chainId);\n      var sushiLib = new Sushi(ethereum, chainId, false, {\n        defaultAccount: ethereum.selectedAddress,\n        defaultConfirmations: 1,\n        autoGasMultiplier: 1.5,\n        testing: false,\n        defaultGas: \"6000000\",\n        defaultGasPrice: \"1000000000000\",\n        accounts: [],\n        ethereumNodeTimeout: 10000\n      });\n      setSushi(sushiLib);\n      window.sushi = sushi;\n      window.sushisauce = sushiLib;\n    }\n  }, [ethereum]);\n  return __jsx(Context.Provider, {\n    value: {\n      sushi: sushi\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, children);\n};\n\n_s(SushiProvider, \"kmofDGGPDmRE45Xlx51LLnXtz7E=\", false, function () {\n  return [useWallet];\n});\n\n_c = SushiProvider;\nexport default SushiProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SushiProvider\");","map":{"version":3,"sources":["/Users/theo/frontend/contexts/SushiProvider/SushiProvider.tsx"],"names":["React","createContext","useEffect","useState","useWallet","Sushi","Context","sushi","undefined","SushiProvider","children","ethereum","setSushi","chainId","Number","sushiLib","defaultAccount","selectedAddress","defaultConfirmations","autoGasMultiplier","testing","defaultGas","defaultGasPrice","accounts","ethereumNodeTimeout","window","sushisauce"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,KAAT,QAAsB,aAAtB;AAMA,OAAO,IAAMC,OAAO,gBAAGL,aAAa,CAAe;AACjDM,EAAAA,KAAK,EAAEC;AAD0C,CAAf,CAA7B;;AAYP,IAAMC,aAAuB,GAAG,SAA1BA,aAA0B,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,mBACRN,SAAS,EADD;AAAA,MACxCO,QADwC,cACxCA,QADwC;;AAAA,kBAEtBR,QAAQ,EAFc;AAAA,MAEzCI,KAFyC;AAAA,MAElCK,QAFkC,iBAIhD;AACA;;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,QAAJ,EAAc;AACZ,UAAME,OAAO,GAAGC,MAAM,CAACH,QAAQ,CAACE,OAAV,CAAtB;AACA,UAAME,QAAQ,GAAG,IAAIV,KAAJ,CAAUM,QAAV,EAAoBE,OAApB,EAA6B,KAA7B,EAAoC;AACnDG,QAAAA,cAAc,EAAEL,QAAQ,CAACM,eAD0B;AAEnDC,QAAAA,oBAAoB,EAAE,CAF6B;AAGnDC,QAAAA,iBAAiB,EAAE,GAHgC;AAInDC,QAAAA,OAAO,EAAE,KAJ0C;AAKnDC,QAAAA,UAAU,EAAE,SALuC;AAMnDC,QAAAA,eAAe,EAAE,eANkC;AAOnDC,QAAAA,QAAQ,EAAE,EAPyC;AAQnDC,QAAAA,mBAAmB,EAAE;AAR8B,OAApC,CAAjB;AAUAZ,MAAAA,QAAQ,CAACG,QAAD,CAAR;AACAU,MAAAA,MAAM,CAAClB,KAAP,GAAeA,KAAf;AACAkB,MAAAA,MAAM,CAACC,UAAP,GAAoBX,QAApB;AACD;AACF,GAjBQ,EAiBN,CAACJ,QAAD,CAjBM,CAAT;AAmBA,SAAO,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAALA;AAAF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCG,QAArC,CAAP;AACD,CA3BD;;GAAMD,a;UACoCL,S;;;KADpCK,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\nimport { useWallet } from \"use-wallet\";\n\nimport { Sushi } from \"../../sushi\";\n\nexport interface SushiContext {\n  sushi?: typeof Sushi;\n}\n\nexport const Context = createContext<SushiContext>({\n  sushi: undefined,\n});\n\ndeclare global {\n  interface Window {\n    sushisauce: any;\n  }\n}\n\ndeclare const window: any;\n\nconst SushiProvider: React.FC = ({ children }) => {\n  const { ethereum }: { ethereum: any } = useWallet();\n  const [sushi, setSushi] = useState<any>();\n\n  // @ts-ignore\n  // @ts-ignore\n\n  useEffect(() => {\n    if (ethereum) {\n      const chainId = Number(ethereum.chainId);\n      const sushiLib = new Sushi(ethereum, chainId, false, {\n        defaultAccount: ethereum.selectedAddress,\n        defaultConfirmations: 1,\n        autoGasMultiplier: 1.5,\n        testing: false,\n        defaultGas: \"6000000\",\n        defaultGasPrice: \"1000000000000\",\n        accounts: [],\n        ethereumNodeTimeout: 10000,\n      });\n      setSushi(sushiLib);\n      window.sushi = sushi;\n      window.sushisauce = sushiLib;\n    }\n  }, [ethereum]);\n\n  return <Context.Provider value={{ sushi }}>{children}</Context.Provider>;\n};\n\nexport default SushiProvider;\n"]},"metadata":{},"sourceType":"module"}