{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/theo/frontend/components/farmCards.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { useWallet } from \"use-wallet\";\nimport BigNumber from \"bignumber.js\";\nimport Layout from \"../components/layout\";\nimport LayoutDashboard from \"../components/layoutDashboard\";\nimport RenderPairIcon from \"../components/renderPairIcon\";\nimport { Farm } from \"../contexts/Farms\";\nimport useAllStakedValue, { StakedValue } from \"../hooks/useAllStakedValue\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport useFarms from \"../hooks/useFarms\";\nimport useSushi from \"../hooks/useSushi\";\nimport useStakedBalance from \"../hooks/useStakedBalance\";\nimport { getEarned, getMasterChefContract, getSushiContract } from \"../sushi/utils\";\nimport { bnToDec } from \"../utils\";\nimport { getBalanceNumber } from \"../utils/formatBalance\";\nimport ColorGuide from \"../styles/colorGuide\";\nimport cryptoList from \"../data/cryptoList\";\nexport default function FarmCards(_ref) {\n  _s2();\n\n  var _this = this,\n      _s = $RefreshSig$();\n\n  var _ref$amount = _ref.amount,\n      amount = _ref$amount === void 0 ? 0 : _ref$amount;\n\n  var _useWallet = useWallet(),\n      account = _useWallet.account;\n\n  var _useWindowSize = useWindowSize(),\n      responsiveWidth = _useWindowSize.responsiveWidth,\n      responsiveHeight = _useWindowSize.responsiveHeight;\n\n  var _useFarms = useFarms(),\n      _useFarms2 = _slicedToArray(_useFarms, 1),\n      farms = _useFarms2[0];\n\n  var stakedValue = useAllStakedValue();\n  var sushi = useSushi();\n  var masterChefContract = getMasterChefContract(sushi);\n  var sushiContract = getSushiContract(sushi);\n  var isMobileLayout = responsiveWidth < 650;\n  var sushiIndex = farms.findIndex(function (_ref2) {\n    var tokenSymbol = _ref2.tokenSymbol;\n    return tokenSymbol === \"SUSHI\";\n  });\n  console.log(sushiIndex);\n  var sushiPrice = sushiIndex >= 0 && stakedValue[sushiIndex] ? stakedValue[sushiIndex].tokenPriceInWeth : new BigNumber(0);\n  var BLOCKS_PER_YEAR = new BigNumber(2333160);\n  var SUSHI_PER_BLOCK = new BigNumber(1000);\n  var rows = farms.reduce(function (farmRows, farm, i) {\n    console.log(stakedValue[i]);\n\n    var farmWithStakedValue = _objectSpread(_objectSpread({}, farm), stakedValue[i]);\n\n    var newFarmRows = _toConsumableArray(farmRows);\n\n    if (newFarmRows[newFarmRows.length - 1].length === 3) {\n      newFarmRows.push([farmWithStakedValue]);\n    } else {\n      newFarmRows[newFarmRows.length - 1].push(farmWithStakedValue);\n    }\n\n    return newFarmRows;\n  }, [[]]);\n  return Object.values(rows.flat()).map(_s(function (dataFarm, index) {\n    _s();\n\n    var interestRate = dataFarm.interestRate,\n        pid = dataFarm.pid,\n        earnToken = dataFarm.earnToken,\n        name = dataFarm.name,\n        icon = dataFarm.icon,\n        id = dataFarm.id,\n        lpToken = dataFarm.lpToken,\n        lpTokenAddress = dataFarm.lpTokenAddress,\n        tokenSymbol = dataFarm.tokenSymbol;\n    console.log(dataFarm);\n\n    var _useState = useState(0),\n        startTime = _useState[0],\n        setStartTime = _useState[1];\n\n    var _useState2 = useState(0),\n        harvestable = _useState2[0],\n        setHarvestable = _useState2[1];\n\n    var stakedBalance = useStakedBalance(pid);\n    return __jsx(\"div\", {\n      key: index,\n      className: \"containerItem\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n        minWidth: isMobileLayout ? \"90%\" : 200,\n        maxWidth: 280,\n        padding: isMobileLayout ? \"5%\" : 30,\n        marginRight: !isMobileLayout && \"2%\",\n        marginBottom: \"2%\",\n        width: isMobileLayout && \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"containerSpaceBetween notResponsive\",\n      style: {\n        marginBottom: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"containerRow notResponsive\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, __jsx(RenderPairIcon, {\n      style: {\n        marginRight: 20\n      },\n      icon: icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, name), __jsx(\"p\", {\n      style: {\n        color: ColorGuide.mainGrey\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, lpToken), __jsx(\"p\", {\n      style: {\n        color: ColorGuide.mainGrey\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Earn GT\"))), __jsx(\"div\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, getBalanceNumber(stakedBalance).toFixed(2)), __jsx(\"p\", {\n      style: {\n        color: ColorGuide.mainGreen\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, interestRate))), __jsx(Link, {\n      href: {\n        pathname: \"/savingsDetail\",\n        query: {\n          farmId: id\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      style: {\n        width: \"100%\",\n        paddingTop: 5,\n        paddingBottom: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Select\"))));\n  }, \"9CNIQBZF1XGw+XHUHUJXfMxHzdU=\", false, function () {\n    return [useStakedBalance];\n  }));\n}\n\n_s2(FarmCards, \"Lj7K6I/f/87YgDfiMfYryLuCc+I=\", false, function () {\n  return [useWallet, useWindowSize, useFarms, useAllStakedValue, useSushi];\n});\n\n_c = FarmCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"FarmCards\");","map":{"version":3,"sources":["/Users/theo/frontend/components/farmCards.js"],"names":["React","useEffect","useState","Link","useWallet","BigNumber","Layout","LayoutDashboard","RenderPairIcon","Farm","useAllStakedValue","StakedValue","useWindowSize","useFarms","useSushi","useStakedBalance","getEarned","getMasterChefContract","getSushiContract","bnToDec","getBalanceNumber","ColorGuide","cryptoList","FarmCards","amount","account","responsiveWidth","responsiveHeight","farms","stakedValue","sushi","masterChefContract","sushiContract","isMobileLayout","sushiIndex","findIndex","tokenSymbol","console","log","sushiPrice","tokenPriceInWeth","BLOCKS_PER_YEAR","SUSHI_PER_BLOCK","rows","reduce","farmRows","farm","i","farmWithStakedValue","newFarmRows","length","push","Object","values","flat","map","dataFarm","index","interestRate","pid","earnToken","name","icon","id","lpToken","lpTokenAddress","startTime","setStartTime","harvestable","setHarvestable","stakedBalance","display","flexDirection","flex","minWidth","maxWidth","padding","marginRight","marginBottom","width","color","mainGrey","textAlign","toFixed","mainGreen","pathname","query","farmId","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Link from \"next/link\";\nimport { useWallet } from \"use-wallet\";\nimport BigNumber from \"bignumber.js\";\n\nimport Layout from \"../components/layout\";\nimport LayoutDashboard from \"../components/layoutDashboard\";\nimport RenderPairIcon from \"../components/renderPairIcon\";\n\nimport { Farm } from \"../contexts/Farms\";\nimport useAllStakedValue, { StakedValue } from \"../hooks/useAllStakedValue\";\n\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport useFarms from \"../hooks/useFarms\";\nimport useSushi from \"../hooks/useSushi\";\nimport useStakedBalance from \"../hooks/useStakedBalance\";\n\nimport {\n  getEarned,\n  getMasterChefContract,\n  getSushiContract,\n} from \"../sushi/utils\";\nimport { bnToDec } from \"../utils\";\nimport { getBalanceNumber } from \"../utils/formatBalance\";\n\nimport ColorGuide from \"../styles/colorGuide\";\n\nimport cryptoList from \"../data/cryptoList\";\n\nexport default function FarmCards({ amount = 0 }) {\n  const { account } = useWallet();\n\n  const { responsiveWidth, responsiveHeight } = useWindowSize();\n  const [farms] = useFarms();\n  const stakedValue = useAllStakedValue();\n\n  const sushi = useSushi();\n  const masterChefContract = getMasterChefContract(sushi);\n  const sushiContract = getSushiContract(sushi);\n\n  const isMobileLayout = responsiveWidth < 650;\n\n  const sushiIndex = farms.findIndex(\n    ({ tokenSymbol }) => tokenSymbol === \"SUSHI\"\n  );\n\n  console.log(sushiIndex);\n\n  const sushiPrice =\n    sushiIndex >= 0 && stakedValue[sushiIndex]\n      ? stakedValue[sushiIndex].tokenPriceInWeth\n      : new BigNumber(0);\n\n  const BLOCKS_PER_YEAR = new BigNumber(2333160);\n  const SUSHI_PER_BLOCK = new BigNumber(1000);\n\n  const rows = farms.reduce(\n    (farmRows, farm, i) => {\n      console.log(stakedValue[i]);\n\n      const farmWithStakedValue = {\n        ...farm,\n        ...stakedValue[i],\n        /* apy: stakedValue[i]\n          ? sushiPrice\n              .times(SUSHI_PER_BLOCK)\n              .times(BLOCKS_PER_YEAR)\n              .times(stakedValue[i].poolWeight)\n              .div(stakedValue[i].totalWethValue)\n          : null, */\n      };\n\n      const newFarmRows = [...farmRows];\n      if (newFarmRows[newFarmRows.length - 1].length === 3) {\n        newFarmRows.push([farmWithStakedValue]);\n      } else {\n        newFarmRows[newFarmRows.length - 1].push(farmWithStakedValue);\n      }\n      return newFarmRows;\n    },\n    [[]]\n  );\n\n  return Object.values(rows.flat()).map((dataFarm, index) => {\n    const {\n      interestRate,\n      pid,\n      earnToken,\n      name,\n      icon,\n      id,\n      lpToken,\n      lpTokenAddress,\n      tokenSymbol,\n    } = dataFarm;\n\n    console.log(dataFarm);\n\n    const [startTime, setStartTime] = useState(0);\n    const [harvestable, setHarvestable] = useState(0);\n    const stakedBalance = useStakedBalance(pid);\n\n    return (\n      <div\n        key={index}\n        className=\"containerItem\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flex: 1,\n          minWidth: isMobileLayout ? \"90%\" : 200,\n          maxWidth: 280,\n          padding: isMobileLayout ? \"5%\" : 30,\n          marginRight: !isMobileLayout && \"2%\",\n          marginBottom: \"2%\",\n          width: isMobileLayout && \"100%\",\n        }}\n      >\n        <div\n          className=\"containerSpaceBetween notResponsive\"\n          style={{ marginBottom: 20 }}\n        >\n          <div className=\"containerRow notResponsive\">\n            <RenderPairIcon style={{ marginRight: 20 }} icon={icon} />\n            <div>\n              <p>{name}</p>\n              <p style={{ color: ColorGuide.mainGrey }}>{lpToken}</p>\n              <p style={{ color: ColorGuide.mainGrey }}>Earn GT</p>\n            </div>\n          </div>\n\n          <div style={{ textAlign: \"right\" }}>\n            <p>{getBalanceNumber(stakedBalance).toFixed(2)}</p>\n            <p style={{ color: ColorGuide.mainGreen }}>{interestRate}</p>\n          </div>\n        </div>\n\n        <Link\n          href={{\n            pathname: \"/savingsDetail\",\n            query: { farmId: id },\n          }}\n        >\n          <button style={{ width: \"100%\", paddingTop: 5, paddingBottom: 5 }}>\n            <p>Select</p>\n          </button>\n        </Link>\n      </div>\n    );\n  });\n}\n"]},"metadata":{},"sourceType":"module"}