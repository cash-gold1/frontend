{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ADD_TRANSACTION = 'ADD_TRANSACTION';\nvar RECEIVE_TX_RECEIPT = 'RECEIVE_TX_RECEIPT';\nvar SET_TRANSACTIONS = 'SET_TRANSACTIONS';\nexport var addTransaction = function addTransaction(transaction) {\n  return {\n    type: ADD_TRANSACTION,\n    transaction: transaction\n  };\n};\nexport var receiveTxReceipt = function receiveTxReceipt(txHash, receipt) {\n  return {\n    type: RECEIVE_TX_RECEIPT,\n    txHash: txHash,\n    receipt: receipt\n  };\n};\nexport var setTransactions = function setTransactions(transactions) {\n  return {\n    type: SET_TRANSACTIONS,\n    transactions: transactions\n  };\n};\nexport var initialState = {\n  initialized: false,\n  transactions: {}\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case ADD_TRANSACTION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        transactions: _objectSpread(_objectSpread({}, state.transactions), {}, _defineProperty({}, action.transaction.hash, action.transaction))\n      });\n\n    case RECEIVE_TX_RECEIPT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        transactions: _objectSpread(_objectSpread({}, state.transactions), {}, _defineProperty({}, action.txHash, _objectSpread(_objectSpread({}, state.transactions[action.txHash]), {}, {\n          receipt: action.receipt\n        })))\n      });\n\n    case SET_TRANSACTIONS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        transactions: action.transactions,\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/theo/genesis/contexts/Transactions/reducer.ts"],"names":["ADD_TRANSACTION","RECEIVE_TX_RECEIPT","SET_TRANSACTIONS","addTransaction","transaction","type","receiveTxReceipt","txHash","receipt","setTransactions","transactions","initialState","initialized","reducer","state","action","hash"],"mappings":";;;;;;AAGA,IAAMA,eAAe,GAAG,iBAAxB;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AAyBA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD;AAAA,SAAqD;AACjFC,IAAAA,IAAI,EAAEL,eAD2E;AAEjFI,IAAAA,WAAW,EAAXA;AAFiF,GAArD;AAAA,CAAvB;AAKP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAiBC,OAAjB;AAAA,SAA0E;AACxGH,IAAAA,IAAI,EAAEJ,kBADkG;AAExGM,IAAAA,MAAM,EAANA,MAFwG;AAGxGC,IAAAA,OAAO,EAAPA;AAHwG,GAA1E;AAAA,CAAzB;AAMP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD;AAAA,SAA2D;AACxFL,IAAAA,IAAI,EAAEH,gBADkF;AAExFQ,IAAAA,YAAY,EAAZA;AAFwF,GAA3D;AAAA,CAAxB;AAKP,OAAO,IAAMC,YAA+B,GAAG;AAC7CC,EAAAA,WAAW,EAAE,KADgC;AAE7CF,EAAAA,YAAY,EAAE;AAF+B,CAAxC;;AAKP,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAA2BC,MAA3B,EAA8E;AAC5F,UAAQA,MAAM,CAACV,IAAf;AACE,SAAKL,eAAL;AACE,6CACKc,KADL;AAEEJ,QAAAA,YAAY,kCACPI,KAAK,CAACJ,YADC,2BAETK,MAAM,CAACX,WAAP,CAAmBY,IAFV,EAEiBD,MAAM,CAACX,WAFxB;AAFd;;AAOF,SAAKH,kBAAL;AACE,6CACKa,KADL;AAEEJ,QAAAA,YAAY,kCACPI,KAAK,CAACJ,YADC,2BAETK,MAAM,CAACR,MAFE,kCAGLO,KAAK,CAACJ,YAAN,CAAmBK,MAAM,CAACR,MAA1B,CAHK;AAIRC,UAAAA,OAAO,EAAEO,MAAM,CAACP;AAJR;AAFd;;AAUF,SAAKN,gBAAL;AACE,6CACKY,KADL;AAEEJ,QAAAA,YAAY,EAAEK,MAAM,CAACL,YAFvB;AAGEE,QAAAA,WAAW,EAAE;AAHf;;AAKF;AACE,aAAOE,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,OAAf","sourcesContent":["import { TransactionReceipt } from 'web3-core'\nimport { Transaction, TransactionsMap } from './types'\n\nconst ADD_TRANSACTION = 'ADD_TRANSACTION'\nconst RECEIVE_TX_RECEIPT = 'RECEIVE_TX_RECEIPT'\nconst SET_TRANSACTIONS = 'SET_TRANSACTIONS'\n\ninterface AddTransactionAction {\n  type: typeof ADD_TRANSACTION,\n  transaction: Transaction\n}\n\ninterface ReceiveTxReceiptAction {\n  type: typeof RECEIVE_TX_RECEIPT,\n  txHash: string,\n  receipt: TransactionReceipt\n}\n\ninterface SetTransactionsAction {\n  type: typeof SET_TRANSACTIONS,\n  transactions: TransactionsMap\n}\n\ntype TransactionsActions = AddTransactionAction | ReceiveTxReceiptAction | SetTransactionsAction\n\nexport interface TransactionsState {\n  initialized: boolean,\n  transactions: TransactionsMap\n}\n\nexport const addTransaction = (transaction: Transaction): AddTransactionAction => ({\n  type: ADD_TRANSACTION,\n  transaction,\n})\n\nexport const receiveTxReceipt = (txHash: string, receipt: TransactionReceipt): ReceiveTxReceiptAction => ({\n  type: RECEIVE_TX_RECEIPT,\n  txHash,\n  receipt,\n})\n\nexport const setTransactions = (transactions: TransactionsMap): SetTransactionsAction => ({\n  type: SET_TRANSACTIONS,\n  transactions,\n})\n\nexport const initialState: TransactionsState = {\n  initialized: false,\n  transactions: {}\n}\n\nconst reducer = (state: TransactionsState, action: TransactionsActions): TransactionsState => {\n  switch (action.type) {\n    case ADD_TRANSACTION:\n      return {\n        ...state,\n        transactions: {\n          ...state.transactions,\n          [action.transaction.hash]: action.transaction,\n        }\n      }\n    case RECEIVE_TX_RECEIPT:\n      return {\n        ...state,\n        transactions: {\n          ...state.transactions,\n          [action.txHash]: {\n            ...state.transactions[action.txHash],\n            receipt: action.receipt,\n          }\n        }\n      }\n    case SET_TRANSACTIONS:\n      return {\n        ...state,\n        transactions: action.transactions,\n        initialized: true,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}